services:
  gateway:
    build:
      context: .
      dockerfile: services/gateway/Dockerfile
      target: development
    ports:
      - "8000:8000"
    depends_on:
      preprocessing:
        condition: service_healthy
      sentiment_analysis:
        condition: service_healthy
      summarization:
        condition: service_healthy
    networks:
      - app-network
    env_file:
      - .env
    
  preprocessing:
    build:
      context: .
      dockerfile: services/preprocessing/Dockerfile
      target: development
    # No ports exposed - only internal communication
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/health')"]
      retries: 5
      timeout: 5s
      interval: 10s
      start_period: 10s

  sentiment_analysis:
    build:
      context: .
      dockerfile: services/sentiment_analysis/Dockerfile
      target: development
    # No ports exposed - only internal communication
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/health')"]
      retries: 5
      timeout: 5s
      interval: 10s
      start_period: 60s   # Loading ML model takes some time

  summarization:
    build:
      context: .
      dockerfile: services/summarization/Dockerfile
      target: development
    # No ports exposed - only internal communication
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/health')"]
      retries: 5
      timeout: 5s
      interval: 10s
      start_period: 60s   # Loading ML model takes some time

  prometheus:
    image:
      prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./services/gateway/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
    
    