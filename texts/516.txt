increasing local contrast the previous section showed adjustments to the brightness and contrast of the entire image. the adjustment changes every pixel of original brightness value a to the same final brightness value b, regardless of the pixel â€™ s neighbors. another class of operations increases the visibility of local differences between pixels, by suppressing the longer - range variations. these neighborhood functions use a moving neighborhood, usually a small circle, that compares or combines the central pixel and the neighbors to produce a new value that is assigned to the central pixel to construct a new image. then the neighborhood shifts to the next pixel and the process is repeated. these calculations are applied to the pixel brightness values in a color coordinate system such as hsi or lab that leaves the color values unchanged. for instance, local equalization functions just like the histogram equalization procedure, except that it takes place within a moving circular neighborhood and assigns a new value only to the central pixel. the result makes a pixel that is slightly brighter than its surroundings brighter still, and vice - versa, enhancing local contrast. the result is usually added back in some proportion to the original image to produce a more visually pleasing result, as shown in the local equalization interactive java tutorial. sharpening of images to increase local contrast is almost universally applied by publishers to counter the visual blurring effect of halftoning images in the printing process. this is usually done by a convolution using a kernel of weights, just as the gaussian smoothing function shown above. but in this application, some of those weights will have negative values. for instance, the laplacian sharpening filter in table 1 combines each pixel with its eight adjacent neighbors as shown in the laplacian sharpening interactive java tutor