data structures for manipulating ( biological ) sequences. generally supports both nucleotide and protein sequences, some functions, like revcompl, only makes sense for nucleotides. | a sequence is a header, sequence data itself, and optional quality data. sequences are type - tagged to identify them as nucleotide, amino acids, or unknown type. all items are lazy bytestrings. the offset type can be used for indexing. | a sequence consists of a header, the sequence data itself, and optional quality data. the type parameter is a phantom type to separate nucleotide and amino acid sequences | an offset, index, or length of a seqdata | the basic data type used in sequences | quality data is normally associated with nucleotide sequences | basic type for quality data. range 0.. 255. typical phred output is in the range 6.. 50, with 20 as the line in the sand separating good from bad. | quality data is a qual vector, currently implemented as a bytestring. | read the character at the specified position in the sequence. | return sequence length. | return sequence label ( first word of header ) | return full header. | return the sequence data. | check whether the sequence has associated quality data. | return the quality data, or error if none exist. use hasqual if in doubt. | adding information to header | modify the header by appending text, or by replacing all but the sequence label ( i. e. first word ). | converting to and from [ char ] | convert a string to seqdata | convert a seqdata to a string returns a sequence with all internal storage freshly copied