as a policy, python doesn't run user - specified code on startup of python programs. ( only interactive sessions execute the script specified in the pythonstartup environment variable if it exists ). however, some programs or sites may find it convenient to allow users to have a standard customization file, which gets run when a program requests it. this module implements such a mechanism. a program that wishes to use the mechanism must execute the statement the user module looks for a file. pythonrc. py in the user's home directory and if it can be opened, executes it ( using execfile ( ) ) in its own ( the module user's ) global namespace. errors during this phase are not caught ; that's up to the program that imports the user module, if it wishes. the home directory is assumed to be named by the home environment variable ; if this is not set, the current directory is used. the user's. pythonrc. py could conceivably test for sys. version if it wishes to do different things depending on the python version. a warning to users : be very conservative in what you place in your. pythonrc. py file. since you don't know which programs will use it, changing the behavior of standard modules or functions is generally not a good idea. a suggestion for programmers who wish to use this mechanism : a simple way to let users specify options for your package is to have them define variables in their. pythonrc. py file that you test in your module. for example, a module spam that has a verbosity level can look for a variable user. spam _ verbose, as follows