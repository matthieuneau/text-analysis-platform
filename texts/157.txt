what level of labview user are you — a developer, engineer, or architect? is it even important? absolutely. these categories make it easy for ni to tailor helpful resources to your individual needs. by visiting the labview skills guide, you can see what defines these levels and which trainings or guides we recommend each use to help them develop successful applications faster. here are a few examples of skills you can learn from the latest guide : for technicians or basic developers - troubleshoot and debug labview code - apply key labview elements for relating data ( such as arrays, clusters, and typedefs ) - apply design patterns and templates for software engineers - optimize reuse of existing code for your projects - design, implement, document, and test code modules for each task - derive a task list and high - level flowchart to guide design and development for software architects - analyze, critique, and improve the architecture of a labview application - optimize code and resources to effectively reduce development time and costs - design an application using object - oriented design principles best of all, many of these resources are free or available at a discounted price for students. questions? post your comments below and we ’ ll follow up on them personally.