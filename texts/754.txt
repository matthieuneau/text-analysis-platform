. net type design guidelines | visual c # tutorials | |. net framework tutorials |. net type design guidelines | © 2006 microsoft corp. | | this tutorial —. net type design guidelines — is from framework design guidelines : conventions, idioms, and patterns for reusable. net libraries, by krzysztof cwalina, brad abrams. copyright © 2006 microsoft corp.. all rights reserved. this article is reproduced by permission. this tutorial has been edited especially for c # online. net. read the book review! | ( this article was written and annotated by members of the microsoft common language runtime ( clr ) and. net teams and other experts. ) type design guidelines in. net from the clr perspective, there are only two categories of types — reference types and value types — but for the purpose of framework design discussion we divide types into more logical groups, each with its own specific design rules. figure 4 - 1 shows these logical groups. classes are the general case of reference types. they make up the bulk of types in the majority of frameworks. classes owe their popularity to the rich set of object - oriented features they support and to their general applicability. base classes and abstract classes are special logical groups related to extensibility. extensibility and base classes are covered in chapter 6. interfaces are types that can be implemented both by reference types and value types. this allows them to serve as roots of polymorphic hierarchies of reference types and value types. in addition, interfaces can be used to simulate multiple inheritance, which is not natively supported by the clr. structs are the general case of value types and should